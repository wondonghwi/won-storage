name: Publish to npm

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.12.0"
          registry-url: "https://registry.npmjs.org"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prepare release version
        id: version
        run: |
          PACKAGE_PATH="./packages/react/package.json"
          CURRENT_VERSION=$(node -p "require('$PACKAGE_PATH').version")
          PUBLISHED_VERSION=$(npm view won-storage version 2>/dev/null || echo "0.0.0")
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "published=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          if [ "$CURRENT_VERSION" = "$PUBLISHED_VERSION" ]; then
            echo "Current version ($CURRENT_VERSION) already exists on npm. Please bump package.json before running this workflow." >&2
            exit 1
          fi
          HIGHEST=$(printf '%s\n%s\n' "$CURRENT_VERSION" "$PUBLISHED_VERSION" | sort -V | tail -n1)
          if [ "$HIGHEST" != "$CURRENT_VERSION" ]; then
            echo "release=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "should_publish=false" >> $GITHUB_OUTPUT
            echo "Current version ($CURRENT_VERSION) is behind published version ($PUBLISHED_VERSION)." >&2
            exit 1
          fi
          echo "release=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "should_publish=true" >> $GITHUB_OUTPUT

      - name: Build
        if: steps.version.outputs.should_publish == 'true'
        run: pnpm build

      - name: Publish packages
        if: steps.version.outputs.should_publish == 'true'
        run: pnpm changeset publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        if: steps.version.outputs.should_publish == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ steps.version.outputs.release }}
          git push origin v${{ steps.version.outputs.release }}
